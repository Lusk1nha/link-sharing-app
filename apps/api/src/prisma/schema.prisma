generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id
  email String @unique

  is_active Boolean @default(true) @map("is_active")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Credential Credential[]
  Admin      Admin?
  Profile    Profile?

  @@map("users")
}

model Profile {
  id String @id

  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  imageUrl  String? @map("image_url")
  firstName String  @map("first_name")
  lastName  String  @map("last_name")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([userId], name: "idx_profile_user_id")
  @@map("profiles")
}

model Admin {
  id String @id

  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admins")
}

model Credential {
  id String @id

  userId       String @unique @map("user_id")
  passwordHash String @map("password_hash")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("credentials")
}
